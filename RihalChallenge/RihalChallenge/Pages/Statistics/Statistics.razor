@page "/statistics"
@using RihalChallenge.Client.Store
@using RihalChallenge.Client.Store.Statistics.GetClassesStatistics
@using RihalChallenge.Client.Store.Statistics.GetCountriesStatistics
@using RihalChallenge.Client.Store.Statistics.GetStudentsAgeAverage
@inject IDispatcher Dispatcher
@inject IState<StateStore> StateStore


<PageTitle>Statistics</PageTitle>

<h1>Statistics</h1>

@if ((bool)StateStore.Value.IsLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Class Name</th>
            <th>Number of students</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var classStatistics in StateStore.Value.ClassesStatistics)
        {
            <tr>
                <td>@classStatistics.ClassName</td>
                <td>@classStatistics.StudentsNumber</td>
            </tr>
        }
        </tbody>
    </table>
    
    <table class="table">
        <thead>
        <tr>
            <th>Country Name</th>
            <th>Number of students</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var country in StateStore.Value.CountriesStatistics)
        {
            <tr>
                <td>@country.CountryName</td>
                <td>@country.StudentsNumber</td>
            </tr>
        }
        </tbody>
    </table>
    
    <h2>
        Students Age Average is: @StateStore.Value.StudentsAgeAverage
    </h2>
}

@code {

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new GetClassesStatisticsAction());
        Dispatcher.Dispatch(new GetCountriesStatisticsAction());
        Dispatcher.Dispatch(new GetStudentsAgeAverageAction());
    }

}