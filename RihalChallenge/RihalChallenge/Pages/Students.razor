@page "/students"
@using RihalChallenge.Data
@using RihalChallenge.Client.Stores.StudentsStore

@inject IDispatcher Dispatcher
@inject IState<WeatherState> StudentState
@inject WeatherForecastService ForecastService

<PageTitle>Students</PageTitle>

<h1>Students List</h1>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in StudentState.Value.Weather)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    private void GetStudents()
    {
        Dispatcher.Dispatch(new GetWeatherAction());
    }

}
